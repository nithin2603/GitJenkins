

CREATE COMPUTE MODULE InputLogging_InLog
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF Environment.Variables.FileData.XMLNSC.Settings.LoggingFlag = 'Y' THEN
		 	CALL CopyEntireMessage();
				
			SET OutputLocalEnvironment.Destination.File.Name='Input-'||COALESCE(Environment.UUID,'')||'-'||CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmssSSSSSS')||'.xml';
			SET OutputLocalEnvironment.Destination.File.Directory= Environment.Variables.FileData.XMLNSC.Settings.InputLog ;
		
			PROPAGATE TO TERMINAL 'out';
		END IF;
		
			 SET OutputRoot.MQMD.Expiry =172800;
       		DECLARE indata REFERENCE TO InputRoot.SOAP.Body.mdm:searchMDMRequest.searchMDM.uUIDMetaDataRequest;
             SET OutputRoot.XMLNSC.searchMDMResponse.UUIDMetaDataRequest.UUID = Environment.uUID;
             SET OutputRoot.XMLNSC.searchMDMResponse.TargetSystemName = indata.targetSystemName;
             SET OutputRoot.XMLNSC.searchMDMResponse.CallingSystemName = indata.callingSystemName;
             SET OutputRoot.XMLNSC.searchMDMResponse.UniqueCallingUserId = indata.uniqueCallingUserId;
             SET OutputRoot.XMLNSC.searchMDMResponse.IPAddressofConsumer = indata.iPAddressofConsumer;
             SET OutputRoot.XMLNSC.searchMDMResponse.RequestDateTime = indata.requestDateTime;
             SET OutputRoot.XMLNSC.searchMDMResponse.ServiceVersion = indata.serviceVersion;
             SET OutputRoot.XMLNSC.searchMDMResponse.TransactionMonitoringFlag = indata.transactionMonitoringFlag;
             SET OutputRoot.XMLNSC.searchMDMResponse.LoggingFlag = indata.loggingFlag;
             SET OutputRoot.XMLNSC.searchMDMResponse.SVCusername = indata.sVCusername;
             SET OutputRoot.XMLNSC.searchMDMResponse.SVCpassword =indata.sVCpassword;
             SET OutputRoot.XMLNSC.searchMDMResponse.ServiceName = indata.serviceName;
             SET OutputRoot.XMLNSC.searchMDMResponse.OperationName = indata.operationName;
             SET OutputRoot.XMLNSC.searchMDMResponse.ObjectName = indata.objectName;
             SET OutputRoot.XMLNSC.searchMDMResponse.SourceCountry = indata.sourceCountry;
             SET OutputRoot.XMLNSC.searchMDMResponse.SourceOrganisation = indata.sourceOrganisation;
             SET OutputRoot.XMLNSC.searchMDMResponse.CallingSystemBatchId = indata.callingSystemBatchId;
             SET OutputRoot.XMLNSC.searchMDMResponse.OperationalInfo.RecordCount = indata.operationalInfo.recordCount;
             SET OutputRoot.XMLNSC.searchMDMResponse.OperationalInfo.LastRecordsent = indata.operationalInfo.lastRecordsent;
             SET OutputRoot.XMLNSC.searchMDMResponse.OperationalInfo.Limit =indata.operationalInfo.limit;
             SET OutputRoot.XMLNSC.searchMDMResponse.OperationalInfo.Offset = indata.operationalInfo.offset;
             SET OutputRoot.XMLNSC.searchMDMResponse.OperationalInfo.HasMore =indata.operationalInfo.hasMore;
        	 SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData.queueName=Environment.Variables.FileData.XMLNSC.Settings.IIBLoggingQueue;	
	
             PROPAGATE TO TERMINAL 'out1';
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

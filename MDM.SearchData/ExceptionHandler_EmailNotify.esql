

CREATE COMPUTE MODULE ExceptionHandler_EmailNotify
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		IF Environment.Variables.FileData.XMLNSC.Settings.EmailNotificationFlag = 'Y' THEN
		 CALL  ComposeAllErrorInformation();
		RETURN TRUE;
		ELSE 
		RETURN FALSE;
		END IF;
	END;

CREATE PROCEDURE ComposeAllErrorInformation() BEGIN
	
	--	IF Environment.Variables.FileData.EmailNotificationFlag = 'Y' THEN
			 
	 	    DECLARE setRef REFERENCE TO Environment.Variables.FileData.XMLNSC.Settings;
	 	 	SET OutputRoot.EmailOutputHeader.To = Environment.Variables.FileData.XMLNSC.Settings.EmailNotificationTo;
	 	    SET OutputRoot.EmailOutputHeader.From = COALESCE(setRef.Env,'')||'_'||BrokerName||COALESCE(setRef.Integration_Name,'')||'@wolterskluwer.com';
	      
	     
			SET OutputRoot.EmailOutputHeader.Subject =COALESCE(setRef.Env,'')||' '||COALESCE(setRef.Integration_Name,'')||' processing failed in IIB'||' UUID '||COALESCE(Environment.UUID,'');
			 
			SET OutputLocalEnvironment.Destination.Email.SMTPServer =Environment.Variables.FileData.XMLNSC.Settings.SmtpServer;
	 	  
	 	
	 	 	SET OutputRoot.EmailOutputHeader.Cc = Environment.Variables.FileData.XMLNSC.Settings.EmailNotificationCc;
	 	
	 	    DECLARE nextLineVar CHAR CAST(CAST('X''0A''' AS BLOB) AS CHAR CCSID 1208); 
	-- 	    
		    DECLARE outputmessagevar CHARACTER ' ';
		    
	 	    IF  Environment.Guid is null THEN
		    	SET Environment.Guid = UUIDASCHAR; 
	 	    END IF;
             SET Environment.Variables.EmailBody = 'Technical Desciption of Error:';
             SET Environment.Variables.EmailBody = Environment.Variables.EmailBody||nextLineVar||nextLineVar||COALESCE(Environment.ErrDescription,'');         
             SET OutputRoot.BLOB.BLOB = CAST(Environment.Variables.EmailBody AS BLOB CCSID 1208);
	  		
		
		
 END; 

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
